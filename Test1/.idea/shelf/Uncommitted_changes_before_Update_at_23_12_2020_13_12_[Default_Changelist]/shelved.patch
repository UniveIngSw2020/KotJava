Index: app/src/main/java/com/example/test1/MapsActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.test1;\r\n\r\nimport android.Manifest;\r\nimport android.app.AlertDialog;\r\nimport android.bluetooth.BluetoothAdapter;\r\nimport android.bluetooth.BluetoothDevice;\r\nimport android.content.BroadcastReceiver;\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.content.IntentFilter;\r\nimport android.content.pm.PackageManager;\r\nimport android.location.Address;\r\nimport android.location.Geocoder;\r\nimport android.location.Location;\r\nimport android.location.LocationManager;\r\nimport android.os.Bundle;\r\nimport android.os.StrictMode;\r\nimport android.provider.Settings;\r\nimport android.util.Log;\r\nimport android.view.Menu;\r\nimport android.view.MenuInflater;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.ImageButton;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.ListView;\r\nimport android.widget.SearchView;\r\nimport android.widget.Toast;\r\nimport android.widget.Toolbar;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.app.ActivityCompat;\r\n\r\nimport com.google.android.gms.location.FusedLocationProviderClient;\r\nimport com.google.android.gms.location.LocationServices;\r\nimport com.google.android.gms.maps.CameraUpdateFactory;\r\nimport com.google.android.gms.maps.GoogleMap;\r\nimport com.google.android.gms.maps.OnMapReadyCallback;\r\nimport com.google.android.gms.maps.SupportMapFragment;\r\nimport com.google.android.gms.maps.model.LatLng;\r\nimport com.google.android.gms.maps.model.MarkerOptions;\r\n\r\nimport org.json.JSONArray;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.io.BufferedReader;\r\nimport java.io.IOException;\r\nimport java.io.InputStreamReader;\r\nimport java.io.OutputStreamWriter;\r\nimport java.net.URL;\r\nimport java.net.URLConnection;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\n\r\n/*v0:\r\n//aggiunta metodo per fare send e get (get viene fatta come lettura dopo risposta del send per ora poi vediamo)\r\n//send messa sull click per la posizione per ora\r\nv1:\r\nnuovo metodo solo per fare il get senza send creato\r\nv2:\r\nmesso thread e controllo per permessi prima di fare invio location (location da a (google in california?)\r\n\r\n<uses-permission android:name=\"android.permission.READ_PHONE_STATE\" />  per https://stackoverflow.com/questions/29753117/waitinginmainsignalcatcherloop-error-in-android-application\r\n\r\n */\r\n\r\n\r\n/*\r\n */\r\n\r\npublic class MapsActivity extends AppCompatActivity implements OnMapReadyCallback, GoogleMap.OnMyLocationButtonClickListener, GoogleMap.OnMyLocationClickListener {\r\n    private FusedLocationProviderClient fusedLocationClient;\r\n    private GoogleMap map;\r\n    private SearchView searchView;\r\n    private SupportMapFragment mapFragment;\r\n    private LocationManager locationManager;\r\n    private Location location = null; // Location\r\n    double latitude; // Latitude\r\n    double longitude; // Longitude\r\n\r\n\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_maps);\r\n        fusedLocationClient = LocationServices.getFusedLocationProviderClient(this);\r\n\r\n        //Toolbar superiore con l'overflow menu\r\n        Toolbar myToolbar1 = findViewById(R.id.toolbar);\r\n        setActionBar(myToolbar1);\r\n        getActionBar().setDisplayShowTitleEnabled(false);\r\n\r\n        ImageButton bfav = findViewById(R.id.imageButtonFavourites);\r\n        bfav.setOnClickListener(new View.OnClickListener(){\r\n            public void onClick(View v){\r\n                //cose\r\n            }\r\n        });\r\n\r\n        ImageButton bstats = findViewById(R.id.imageButtonStats);\r\n        bstats.setOnClickListener(new View.OnClickListener(){\r\n            public void onClick(View v){\r\n                //cose\r\n            }\r\n        });\r\n\r\n        ImageButton bloc = findViewById(R.id.imageButtonLocation);\r\n        bloc.setOnClickListener(new View.OnClickListener(){\r\n            public void onClick(View v){\r\n                //cose\r\n            }\r\n        });\r\n\r\n        ImageButton bhist = findViewById(R.id.imageButtonHistory);\r\n        bhist.setOnClickListener(new View.OnClickListener(){\r\n            public void onClick(View v){\r\n                //cose\r\n            }\r\n        });\r\n\r\n\r\n        final SearchView searchView = findViewById(R.id.srclocation); //da cambiare con nome del search]\r\n\r\n        //Button scan = findViewById(R.id.bscan); //per lo scan per ora no\r\n\r\n        //searchView = findViewById(R.id.srclocation);\r\n        mapFragment = (SupportMapFragment) getSupportFragmentManager().findFragmentById(R.id.map);\r\n\r\n        mapFragment.getMapAsync(new OnMapReadyCallback() {\r\n            @Override\r\n            public void onMapReady(GoogleMap googleMap) {\r\n\r\n                MapsActivity.this.map = googleMap;\r\n\r\n                googleMap.setMapType(GoogleMap.MAP_TYPE_TERRAIN);\r\n\r\n                if(FirstAccessActivity.checkPermission(getApplicationContext())) {\r\n                    locationManager = (LocationManager) getSystemService(LOCATION_SERVICE);\r\n                    location = locationManager.getLastKnownLocation(LocationManager.GPS_PROVIDER);\r\n                    if(location != null)\r\n                        googleMap.animateCamera(CameraUpdateFactory.newLatLngZoom(new LatLng( location.getLatitude(),location.getLongitude()), 20));\r\n\r\n                }\r\n\r\n\r\n\r\n            }\r\n\r\n        });\r\n\r\n        searchView.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                searchView.onActionViewExpanded();\r\n            }\r\n        });\r\n\r\n        searchView.setOnQueryTextListener(new SearchView.OnQueryTextListener() {\r\n            @Override\r\n            public boolean onQueryTextSubmit(String location) {\r\n\r\n                List<Address> addressList = null;\r\n\r\n                if (location != null || !location.equals(\"\")) {\r\n                    Geocoder geocoder = new Geocoder(MapsActivity.this);\r\n                    try {\r\n                        addressList = geocoder.getFromLocationName(location, 1);\r\n\r\n\r\n\r\n                        Address address = addressList.get(0);\r\n                        LatLng latLng = new LatLng(address.getLatitude(), address.getLongitude());\r\n\r\n                        map.animateCamera(CameraUpdateFactory.newLatLng(latLng));\r\n\r\n                    } catch (IOException e) {\r\n                        e.printStackTrace();\r\n                    }catch (Exception e){\r\n                        Toast.makeText(MapsActivity.this, \"Error: \"+e.getMessage(), Toast.LENGTH_SHORT).show();\r\n                    }\r\n                }\r\n\r\n                return false;\r\n            }\r\n\r\n            @Override\r\n            public boolean onQueryTextChange(String newText) {\r\n                return false;\r\n            }\r\n        });\r\n\r\n\r\n\r\n        mapFragment.getMapAsync(this);\r\n        displayDiscovry(); //scan BLUETOOTH\r\n    }\r\n\r\n\r\n    /**\r\n     * Manipulates the map once available.\r\n     * This callback is triggered when the map is ready to be used.\r\n     * This is where we can add markers or lines, add listeners or move the camera. In this case,\r\n     * we just add a marker near Sydney, Australia.\r\n     * If Google Play services is not installed on the device, the user will be prompted to install\r\n     * it inside the SupportMapFragment. This method will only be triggered once the user has\r\n     * installed Google Play services and returned to the app.\r\n     */\r\n    @Override\r\n    public void onMapReady(GoogleMap map) {\r\n        if (FirstAccessActivity.checkPermission(getApplicationContext())) {\r\n            System.out.println(\"entrato\");\r\n\r\n            map.setMyLocationEnabled(true);\r\n            map.setOnMyLocationButtonClickListener(this);\r\n            map.setOnMyLocationClickListener(this);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onMyLocationClick(@NonNull Location location) {\r\n        Toast.makeText(this, \"Current location:\\n\" + location, Toast.LENGTH_LONG)\r\n                .show();\r\n        //fa la send and il get per ora\r\n\r\n        latitude = location.getLatitude();\r\n        longitude = location.getLongitude();\r\n\r\n        //SendLoc(String.format(String.valueOf(location)));\r\n        controllPermissionAndSend(latitude + \":\" + longitude);\r\n        Log.e(\"loc\",\"ok=\");\r\n    }\r\n\r\n    @Override\r\n    public boolean onMyLocationButtonClick() {\r\n        Toast.makeText(this, \"MyLocation button clicked\", Toast.LENGTH_SHORT)\r\n                .show();\r\n\r\n        return false;\r\n    }\r\n\r\n    //Creazione del menu della maps activity\r\n    @Override\r\n    public boolean onCreateOptionsMenu(Menu menu) {\r\n        getMenuInflater().inflate(R.menu.menu_maps, menu);\r\n        return super.onCreateOptionsMenu(menu);\r\n    }\r\n\r\n\r\n\r\n    //Gestione del click sulle varie voci del menu\r\n    @Override\r\n    public boolean onOptionsItemSelected(MenuItem item) {\r\n        // Handle item selection\r\n        switch (item.getItemId()) {\r\n            case R.id.help:\r\n                //Aprire sottomenu di help (Ho messo di seguito le voci, forse Ã¨ uguale)\r\n                return true;\r\n            case R.id.guida:\r\n                //Rimandare alla pagina con la guida/mostrare popup della guida\r\n                //Intent intent = new Intent(this, \"guida\".class);\r\n                //startActivity(intent);\r\n                return true;\r\n            case R.id.faq:\r\n                //Rimandare alla pagina con le F.A.Q.\r\n                //Intent intent = new Intent(this, \"FAQ\".class);\r\n                //startActivity(intent);\r\n                return true;\r\n            case R.id.contatti:\r\n                //Rimandare alla pagina dei contatti/mostrare popup dei contatti\r\n                //Intent intent = new Intent(this, \"contatti\".class);\r\n                //startActivity(intent);\r\n                return true;\r\n            case R.id.credits:\r\n                //Rimandare alla pagina dei credits/mostrare popup dei credits\r\n                //Intent intent = new Intent(this, \"credits\".class);\r\n                //startActivity(intent);\r\n                return true;\r\n            case R.id.aggiornamento:\r\n                /*Rimandare alla pagina di aggiornamento\r\n                Intent intent = new Intent(this, \"aggiornamento\".class);\r\n                startActivity(intent);\r\n                */\r\n                return true;\r\n            case R.id.condividi:\r\n                //Copiare il link per la condivisione\r\n                return true;\r\n            case R.id.valuta:\r\n                //Something\r\n                return true;\r\n            case R.id.storico:\r\n                /*Rimandare alla pagina dello storico scansioni/mostrare popup dello storico\r\n                Intent intent = new Intent(this, \"storico\".class);\r\n                startActivity(intent);\r\n                */\r\n                return true;\r\n            case R.id.autoscan:\r\n                //Attivare/disattivare autoscan\r\n                return true;\r\n            case R.id.scansioni:\r\n                /*Rimandare alla pagina dei dispositivi nascosti/mostrare popup dei dispositivi\r\n                Intent intent = new Intent(this, \"nascosti\".class);\r\n                startActivity(intent);\r\n                */\r\n                return true;\r\n            default:\r\n                return super.onOptionsItemSelected(item);\r\n        }\r\n    }\r\n\r\n    //get info of smartminchia da inviare\r\n    String getId() {\r\n        return Settings.Secure.getString(getContentResolver(), Settings.Secure.ANDROID_ID);\r\n    }\r\n\r\n    String getMac() {\r\n\r\n        BluetoothAdapter m_BluetoothAdapter = BluetoothAdapter.getDefaultAdapter();\r\n        return m_BluetoothAdapter.getAddress();\r\n    }\r\n    //send and from server php version:\r\n\r\n/////////////////////////////////////////////////\r\n\r\n    void controllPermissionAndSend(String loc) {\r\n\r\n        StrictMode.ThreadPolicy policy = new StrictMode.ThreadPolicy.Builder().permitAll().build();\r\n        StrictMode.setThreadPolicy(policy);\r\n\r\n        ArrayList<String> arrayList = new ArrayList<>();\r\n        if (ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {\r\n            // TODO: Consider calling\r\n            //    ActivityCompat#requestPermissions\r\n            // here to request the missing permissions, and then overriding\r\n\r\n            // to handle the case where the user grants the permission. See the documentation\r\n            // for ActivityCompat#requestPermissions for more details.\r\n            arrayList.add(Manifest.permission.ACCESS_FINE_LOCATION);\r\n            arrayList.add(Manifest.permission.ACCESS_COARSE_LOCATION);\r\n            Toast.makeText(this, \"location fine\", Toast.LENGTH_SHORT).show();\r\n        }else {\r\n            Log.e(\"permessi\",\"ok\");\r\n            SendLoc(loc);\r\n        }\r\n        if (!arrayList.isEmpty()) {\r\n            String[] permi = new String[arrayList.size()];\r\n            permi = arrayList.toArray(permi);\r\n            ActivityCompat.requestPermissions(this, permi, 0);\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    //\r\n\r\n    public  void  SendLoc(String loc){ //need location\r\n\r\n\r\n\r\n        String data = \"id=\"+getId()+\"&bmac=\"+getMac()+\"&loc=\"+loc+\"&blueFound=0&timeStamp=1\";\r\n\r\n\r\n        String text = \"\";\r\n        BufferedReader reader=null;\r\n\r\n        // Send data\r\n        Log.e(\"location\",\"this is your location\"+loc);\r\n        try\r\n        {\r\n\r\n            // Defined URL  where to send data\r\n            URL url = new URL(\"http://192.168.0.104/posti.php\");\r\n\r\n            // Send POST data request\r\n\r\n            URLConnection conn = url.openConnection();\r\n            conn.setDoOutput(true);\r\n\r\n            OutputStreamWriter wr = new OutputStreamWriter(conn.getOutputStream());\r\n\r\n            wr.write( data );\r\n            wr.flush();\r\n\r\n            // Get the server response\r\n\r\n            reader = new BufferedReader(new InputStreamReader(conn.getInputStream()));\r\n            StringBuilder sb = new StringBuilder();\r\n            String line = null;\r\n\r\n            Log.e(\"loc\",\"ok2 Sent\"); //vedi cosa invia\r\n            // Read Server Response\r\n            while((line = reader.readLine()) != null)\r\n            {\r\n                // Append server response in string\r\n                sb.append(line + \"\\n\");\r\n            }\r\n\r\n            //server response da usare per i marker nella get\r\n            text = sb.toString();\r\n\r\n        }\r\n        catch(Exception ex)\r\n        {\r\n\r\n            ex.printStackTrace();\r\n\r\n        }\r\n        finally\r\n        {\r\n            try\r\n            {\r\n                reader.close();\r\n            }\r\n\r\n            catch(Exception ex) {ex.printStackTrace();}\r\n            getParsing(text);\r\n        }\r\n\r\n    }\r\n\r\n    void getParsing(String k){\r\n        // get from server and add markers\r\n\r\n        try {\r\n            JSONObject jsonObject = new JSONObject(k);\r\n\r\n            JSONArray jsonArray = jsonObject.getJSONArray(\"data\");\r\n\r\n            for (int i=0;i<jsonArray.length();i++){\r\n                final JSONObject obj = jsonArray.getJSONObject(i);\r\n\r\n                // Log.e(\"json\",obj.optString(\"id\"));\r\n                final Double lat= Double.parseDouble(obj.optString(\"loc\").split(\":\")[0]);\r\n                final Double lon= Double.parseDouble(obj.optString(\"loc\").split(\":\")[1]);\r\n\r\n                mapFragment.getMapAsync(new OnMapReadyCallback() {\r\n                    @Override\r\n                    public void onMapReady(GoogleMap googleMap) {\r\n                        googleMap.setMapType(GoogleMap.MAP_TYPE_TERRAIN);\r\n                        googleMap.addMarker(new MarkerOptions()\r\n                                .position(new LatLng(lat, lon))\r\n                                .title(obj.optString(\"id\")));\r\n                        // googleMap.animateCamera(CameraUpdateFactory.newLatLngZoom(new LatLng(37.4233438, -122.0728817), 10));\r\n                    }\r\n                });\r\n            }\r\n\r\n        } catch (JSONException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    //get separato da send\r\n    void getLastData(String k){\r\n\r\n        String text = \"\";\r\n        BufferedReader reader=null;\r\n\r\n        try {\r\n            // Defined URL  where to send data\r\n            URL url = new URL(\"http://192.168.1.4/posti.php\");\r\n\r\n            URLConnection conn = url.openConnection();\r\n\r\n            // get from server and add markers\r\n            reader = new BufferedReader(new InputStreamReader(conn.getInputStream()));\r\n            StringBuilder sb = new StringBuilder();\r\n            String line = null;\r\n\r\n            // Read Server Response\r\n            while ((line = reader.readLine()) != null) {\r\n                // Append server response in string\r\n                sb.append(line + \"\\n\");\r\n            }\r\n\r\n            //server response da usare per i marker nella get\r\n            text = sb.toString();\r\n        }\r\n        catch(Exception ex)\r\n        {\r\n\r\n            ex.printStackTrace();\r\n\r\n        }\r\n        finally\r\n        {\r\n            try\r\n            {\r\n                reader.close();\r\n            }\r\n\r\n            catch(Exception ex) {ex.printStackTrace();}\r\n            getParsing(text);\r\n        }\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    public void  displayDiscovry(){\r\n\r\n        final ArrayList<String> list = new ArrayList<>();\r\n\r\n        final ArrayAdapter<String> arrayAdapter = new ArrayAdapter<String>(MapsActivity.this,android.R.layout.simple_list_item_1,list);\r\n\r\n        AlertDialog.Builder alertDialog = new AlertDialog.Builder(MapsActivity.this);\r\n        LinearLayout linearLayout = new LinearLayout(MapsActivity.this);\r\n\r\n        ListView listView = new ListView(MapsActivity.this);\r\n        linearLayout.addView(listView);\r\n\r\n        listView.setAdapter(arrayAdapter);\r\n\r\n        final BluetoothAdapter bluetoothAdapter = BluetoothAdapter.getDefaultAdapter();\r\n        if (bluetoothAdapter == null) {\r\n            Toast t = new Toast(this);\r\n            t.setText(\"Sorry your phone do not support Bluetooth\");\r\n            t.show();\r\n        } else {\r\n            if (!bluetoothAdapter.isEnabled()) {\r\n                Intent enableBtIntent = new Intent(BluetoothAdapter.ACTION_REQUEST_ENABLE);\r\n                startActivityForResult(enableBtIntent,1);}\r\n            //   bluetoothDev=new BluetoothDev();\r\n\r\n            //added\r\n            // Create a BroadcastReceiver for ACTION_FOUND\r\n            final BroadcastReceiver mReceiver = new BroadcastReceiver() {\r\n                public void onReceive(Context context, Intent intent) {\r\n                    String action = intent.getAction();\r\n                    // When discovery finds a device\r\n                    if (BluetoothDevice.ACTION_FOUND.equals(action)) {\r\n                        // Get the BluetoothDevice object from the Intent\r\n                        BluetoothDevice device = intent.getParcelableExtra(BluetoothDevice.EXTRA_DEVICE);\r\n                        // Add the name and address to an array adapter to show in a ListView\r\n\r\n                        Log.e(\"list\",device.getAddress());\r\n                        list.add(device.getName());\r\n                        arrayAdapter.notifyDataSetChanged();\r\n\r\n                    }\r\n                }\r\n            };\r\n// Register the BroadcastReceiver\r\n            IntentFilter filter = new IntentFilter(BluetoothDevice.ACTION_FOUND);\r\n            registerReceiver(mReceiver, filter); // Don't forget to unregister during onDestroy\r\n            //end added\r\n\r\n            bluetoothAdapter.startDiscovery();\r\n\r\n            alertDialog.setTitle(\"Bluetooth Scan\");\r\n            alertDialog.setView(linearLayout);\r\n            alertDialog.setPositiveButton(\"Ok\", new DialogInterface.OnClickListener() {\r\n                @Override\r\n                public void onClick(DialogInterface dialog, int which) {\r\n\r\n                    unregisterReceiver(mReceiver);\r\n                    bluetoothAdapter.cancelDiscovery();\r\n                    dialog.dismiss();\r\n                }\r\n            });\r\n            alertDialog.show();\r\n\r\n        }\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/test1/MapsActivity.java	(revision e90b81272c319205fe2a707816000e5f36870d6e)
+++ app/src/main/java/com/example/test1/MapsActivity.java	(date 1608661337212)
@@ -256,6 +256,7 @@
     //Gestione del click sulle varie voci del menu
     @Override
     public boolean onOptionsItemSelected(MenuItem item) {
+        Log.e("permessi","ok");
         // Handle item selection
         switch (item.getItemId()) {
             case R.id.help:
@@ -566,6 +567,7 @@
                 }
             });
             alertDialog.show();
+            
 
         }
     }
